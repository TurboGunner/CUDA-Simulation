Created a window with size 2560 X 1026.
Address for Vulkan debug callback: 00007FFAE8B617C0. Debug callback successful!

Shout out to Bidoof on the beat!

GPU Device #0 has been selected for Vulkan Rendering successfully!
No errors detected while selecting Vulkan queue family. 
Vulkan Device Extension Count: 5
Vulkan instance successfully created!
Successfully created Vulkan surface for window!

Swapchain Image Count: 3

Created color attachment for the render pass.
Created depth attachment for the render pass.
Created attachment references for the render pass.


Color Attachment Ref ID: 2

Created subpass description for the render pass.
Created the subpass dependencies for the renderpass.
Initialized the renderpass creation info.
Successfully initialized the render pass!


Memory Type: 1
Created allocation info for video memory.
Created depth image view.
Started command recording!
Ended command recording!

Successfully submitted item to queue!


Swapchain Image View Size: 3
Framebuffers size: 2560 X 1026.
CUDA Driver API Error Status for Allocation Granularity: CUDA_SUCCESS | CUDA Driver Error String: no error

CUDA Driver API Error Status for MemAddressReserve: CUDA_SUCCESS | CUDA Driver Error String: no error

Granularity: 2097152

CUDA Driver API Error Status for MemCreate: CUDA_SUCCESS | CUDA Driver Error String: no error

CUDA Driver API Error Status for ExportToShareableHandle: CUDA_SUCCESS | CUDA Driver Error String: no error

CUDA Driver API Error Status for MapMemory: CUDA_SUCCESS | CUDA Driver Error String: no error

CUDA Driver API Error Status for ReleaseMemory: CUDA_SUCCESS | CUDA Driver Error String: no error

CUDA Driver API Error Status for SetMemoryAccess: CUDA_SUCCESS | CUDA Driver Error String: no error

Memory Type: 1
Created allocation info for video memory.
Buffer Memory Size: 16
Address for Vulkan debug callback: 00007FFAE8B617C0. Debug callback successful![vulkan] Debug report from ObjectType: 3
Message: 

Validation Error: [ VUID-VkSemaphoreCreateInfo-pNext-pNext ] Object 0: handle = 0x210b8c15ba0, type = VK_OBJECT_TYPE_DEVICE; 
 MessageID = 0x8fe45d78 
 vkCreateSemaphore: pCreateInfo->pNext chain includes a structure with unknown VkStructureType (1000077824); Allowed structures are [VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, VkSemaphoreTypeCreateInfo]. This error is based on the Valid Usage documentation for version 216 of the Vulkan header.  It is possible that you are using a struct from a private extension or an extension that was added to a later version of the Vulkan header, in which case the use of pCreateInfo->pNext is undefined and may not work correctly with validation enabled The Vulkan spec states: Each pNext member of any structure (including this one) in the pNext chain must be either NULL or a pointer to a valid instance of VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, or VkSemaphoreTypeCreateInfo (https://vulkan.lunarg.com/doc/view/1.3.216.0/windows/1.3-extensions/vkspec.html#VUID-VkSemaphoreCreateInfo-pNext-pNext)

Address for Vulkan debug callback: 00007FFAE8B617C0. Debug callback successful![vulkan] Debug report from ObjectType: 3
Message: 

Validation Error: [ VUID-VkSemaphoreCreateInfo-pNext-pNext ] Object 0: handle = 0x210b8c15ba0, type = VK_OBJECT_TYPE_DEVICE; 
 MessageID = 0x8fe45d78 
 vkCreateSemaphore: pCreateInfo->pNext chain includes a structure with unknown VkStructureType (1000077824); Allowed structures are [VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, VkSemaphoreTypeCreateInfo]. This error is based on the Valid Usage documentation for version 216 of the Vulkan header.  It is possible that you are using a struct from a private extension or an extension that was added to a later version of the Vulkan header, in which case the use of pCreateInfo->pNext is undefined and may not work correctly with validation enabled The Vulkan spec states: Each pNext member of any structure (including this one) in the pNext chain must be either NULL or a pointer to a valid instance of VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, or VkSemaphoreTypeCreateInfo (https://vulkan.lunarg.com/doc/view/1.3.216.0/windows/1.3-extensions/vkspec.html#VUID-VkSemaphoreCreateInfo-pNext-pNext)
[vulkan] Debug report from ObjectType: 3
Message: 

Validation Error: [ VUID-VkSemaphoreCreateInfo-pNext-pNext ] Object 0: handle = 0x210b8c15ba0, type = VK_OBJECT_TYPE_DEVICE; 
 MessageID = 0x8fe45d78 
 vkCreateSemaphore: pCreateInfo->pNext chain includes a structure with unknown VkStructureType (1000077824); Allowed structures are [VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, VkSemaphoreTypeCreateInfo]. This error is based on the Valid Usage documentation for version 216 of the Vulkan header.  It is possible that you are using a struct from a private extension or an extension that was added to a later version of the Vulkan header, in which case the use of pCreateInfo->pNext is undefined and may not work correctly with validation enabled The Vulkan spec states: Each pNext member of any structure (including this one) in the pNext chain must be either NULL or a pointer to a valid instance of VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, or VkSemaphoreTypeCreateInfo (https://vulkan.lunarg.com/doc/view/1.3.216.0/windows/1.3-extensions/vkspec.html#VUID-VkSemaphoreCreateInfo-pNext-pNext)

Successfully created render fence #0!
Successfully created render fence #1!
Successfully created all render fences!

Successfully created render semaphore #0!
Successfully created render semaphore #1!
Successfully created all render semaphores!

Successfully created render semaphore #0!
Successfully created render semaphore #1!
Successfully created all render semaphores!

Successfully read shader file Shaders/vert.spv!

Successfully read shader file Shaders/frag.spv!

Initialized input assembly info struct (vertex) for the render pipeline.
Initialized input assembly info struct (frag) for the render pipeline.
Initialized vertex input info struct for the render pipeline.
Initialized input assembly info struct for the render pipeline.
Initialized viewport state values for the render pipeline.
Initialized dynamic states for the render pipeline.

Created color blend attachment for the render pipeline.
Created color blend state for the render pipeline.
Created depth stencil state for the render pipeline.

Dynamic State Count: 2.
Created graphics pipeline info for render pipeline.
Name for shader stage (Index 0): main.
Successfully created graphics pipeline!
Successfully created mesh pipeline!
Created a window with size 2560 X 1026.

Address for Vulkan Render Pass: EC4BEC000000000B.

Started command recording!
Ended command recording!

Successfully submitted item to queue!

Address for Vulkan debug callback: 00007FFAE8B617C0. Debug callback successful![vulkan] Debug report from ObjectType: 3
Message: 

Validation Error: [ VUID-VkSemaphoreCreateInfo-pNext-pNext ] Object 0: handle = 0x210b8c15ba0, type = VK_OBJECT_TYPE_DEVICE; 
 MessageID = 0x8fe45d78 
 vkCreateSemaphore: pCreateInfo->pNext chain includes a structure with unknown VkStructureType (1000077824); Allowed structures are [VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, VkSemaphoreTypeCreateInfo]. This error is based on the Valid Usage documentation for version 216 of the Vulkan header.  It is possible that you are using a struct from a private extension or an extension that was added to a later version of the Vulkan header, in which case the use of pCreateInfo->pNext is undefined and may not work correctly with validation enabled The Vulkan spec states: Each pNext member of any structure (including this one) in the pNext chain must be either NULL or a pointer to a valid instance of VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, or VkSemaphoreTypeCreateInfo (https://vulkan.lunarg.com/doc/view/1.3.216.0/windows/1.3-extensions/vkspec.html#VUID-VkSemaphoreCreateInfo-pNext-pNext)
[vulkan] Debug report from ObjectType: 3
Message: 

Validation Error: [ VUID-VkSemaphoreCreateInfo-pNext-pNext ] Object 0: handle = 0x210b8c15ba0, type = VK_OBJECT_TYPE_DEVICE; 
 MessageID = 0x8fe45d78 
 vkCreateSemaphore: pCreateInfo->pNext chain includes a structure with unknown VkStructureType (1000077824); Allowed structures are [VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, VkSemaphoreTypeCreateInfo]. This error is based on the Valid Usage documentation for version 216 of the Vulkan header.  It is possible that you are using a struct from a private extension or an extension that was added to a later version of the Vulkan header, in which case the use of pCreateInfo->pNext is undefined and may not work correctly with validation enabled The Vulkan spec states: Each pNext member of any structure (including this one) in the pNext chain must be either NULL or a pointer to a valid instance of VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, or VkSemaphoreTypeCreateInfo (https://vulkan.lunarg.com/doc/view/1.3.216.0/windows/1.3-extensions/vkspec.html#VUID-VkSemaphoreCreateInfo-pNext-pNext)
[vulkan] Debug report from ObjectType: 4
Message: 

Validation Error: [ VUID-VkPresentInfoKHR-pImageIndices-01296 ] Object 0: handle = 0x210c1a6b760, type = VK_OBJECT_TYPE_QUEUE; 
 MessageID = 0xc7aabc16 
 vkQueuePresentKHR(): pSwapchains[0] images passed to present must be in layout VK_IMAGE_LAYOUT_PRESENT_SRC_KHR or VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR but is in VK_IMAGE_LAYOUT_UNDEFINED. The Vulkan spec states: Each element of pImageIndices must be the index of a presentable image acquired from the swapchain specified by the corresponding element of the pSwapchains array, and the presented image subresource must be in the VK_IMAGE_LAYOUT_PRESENT_SRC_KHR layout at the time the operation is executed on a VkDevice (https://github.com/KhronosGroup/Vulkan-Docs/search?q=)VUID-VkPresentInfoKHR-pImageIndices-01296)

Address for Vulkan debug callback: 00007FFAE8B617C0. Debug callback successful![vulkan] Debug report from ObjectType: 3
Message: 

Validation Error: [ VUID-VkSemaphoreCreateInfo-pNext-pNext ] Object 0: handle = 0x210b8c15ba0, type = VK_OBJECT_TYPE_DEVICE; 
 MessageID = 0x8fe45d78 
 vkCreateSemaphore: pCreateInfo->pNext chain includes a structure with unknown VkStructureType (1000077824); Allowed structures are [VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, VkSemaphoreTypeCreateInfo]. This error is based on the Valid Usage documentation for version 216 of the Vulkan header.  It is possible that you are using a struct from a private extension or an extension that was added to a later version of the Vulkan header, in which case the use of pCreateInfo->pNext is undefined and may not work correctly with validation enabled The Vulkan spec states: Each pNext member of any structure (including this one) in the pNext chain must be either NULL or a pointer to a valid instance of VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, or VkSemaphoreTypeCreateInfo (https://vulkan.lunarg.com/doc/view/1.3.216.0/windows/1.3-extensions/vkspec.html#VUID-VkSemaphoreCreateInfo-pNext-pNext)
[vulkan] Debug report from ObjectType: 3
Message: 

Validation Error: [ VUID-VkSemaphoreCreateInfo-pNext-pNext ] Object 0: handle = 0x210b8c15ba0, type = VK_OBJECT_TYPE_DEVICE; 
 MessageID = 0x8fe45d78 
 vkCreateSemaphore: pCreateInfo->pNext chain includes a structure with unknown VkStructureType (1000077824); Allowed structures are [VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, VkSemaphoreTypeCreateInfo]. This error is based on the Valid Usage documentation for version 216 of the Vulkan header.  It is possible that you are using a struct from a private extension or an extension that was added to a later version of the Vulkan header, in which case the use of pCreateInfo->pNext is undefined and may not work correctly with validation enabled The Vulkan spec states: Each pNext member of any structure (including this one) in the pNext chain must be either NULL or a pointer to a valid instance of VkExportSemaphoreCreateInfo, VkExportSemaphoreWin32HandleInfoKHR, or VkSemaphoreTypeCreateInfo (https://vulkan.lunarg.com/doc/view/1.3.216.0/windows/1.3-extensions/vkspec.html#VUID-VkSemaphoreCreateInfo-pNext-pNext)
[vulkan] Debug report from ObjectType: 4
Message: 

Validation Error: [ VUID-VkPresentInfoKHR-pImageIndices-01296 ] Object 0: handle = 0x210c1a6b760, type = VK_OBJECT_TYPE_QUEUE; 
 MessageID = 0xc7aabc16 
 vkQueuePresentKHR(): pSwapchains[0] images passed to present must be in layout VK_IMAGE_LAYOUT_PRESENT_SRC_KHR or VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR but is in VK_IMAGE_LAYOUT_UNDEFINED. The Vulkan spec states: Each element of pImageIndices must be the index of a presentable image acquired from the swapchain specified by the corresponding element of the pSwapchains array, and the presented image subresource must be in the VK_IMAGE_LAYOUT_PRESENT_SRC_KHR layout at the time the operation is executed on a VkDevice (https://github.com/KhronosGroup/Vulkan-Docs/search?q=)VUID-VkPresentInfoKHR-pImageIndices-01296)
[vulkan] Debug report from ObjectType: 4
Message: 

Validation Error: [ VUID-VkPresentInfoKHR-pImageIndices-01296 ] Object 0: handle = 0x210c1a6b760, type = VK_OBJECT_TYPE_QUEUE; 
 MessageID = 0xc7aabc16 
 vkQueuePresentKHR(): pSwapchains[0] images passed to present must be in layout VK_IMAGE_LAYOUT_PRESENT_SRC_KHR or VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR but is in VK_IMAGE_LAYOUT_UNDEFINED. The Vulkan spec states: Each element of pImageIndices must be the index of a presentable image acquired from the swapchain specified by the corresponding element of the pSwapchains array, and the presented image subresource must be in the VK_IMAGE_LAYOUT_PRESENT_SRC_KHR layout at the time the operation is executed on a VkDevice (https://github.com/KhronosGroup/Vulkan-Docs/search?q=)VUID-VkPresentInfoKHR-pImageIndices-01296)

